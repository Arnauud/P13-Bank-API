swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user authentication.
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid credentials
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user registration.
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '201':
          description: Signup Successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch user profile
      description: Get the profile details of the authenticated user.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfile'
        '401':
          description: Unauthorized - Invalid token
        '404':
          description: User Profile - Not Found
        '500':
          description: Internal Server Error
          
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update user profile
      description: Modify profile details of the authenticated user.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
        - in: body
          name: body
          description: Updated profile data
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month
      description: Retrieve all transactions for the current month, grouped by account.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: List of transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized - Invalid token
        '404':
          description: Token not found
        '500':
          description: Internal server error

    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Create a new transaction
      description: Add a new transaction to a user's account.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
        - in: body
          name: body
          description: Transaction data
          required: true
          schema:
            $ref: '#/definitions/TransactionInput'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '404':
          description: Transaction Not Found
        '500':
          description: Internal server error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get details of a specific transaction
      description: Retrieve detailed information of a single transaction.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: Modify an existing transaction.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Updated transaction data
          required: true
          schema:
            $ref: '#/definitions/TransactionInput'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a transaction
      description: Remove a specific transaction from the user's account.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

definitions:
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
        format: float
      description:
        type: string
      category:
        type: string
      accountId:
        type: string

  TransactionInput:
    type: object
    properties:
      date:
        type: string
        format: date-time
      amount:
        type: number
        format: float
      description:
        type: string
      category:
        type: string
      accountId:
        type: string
